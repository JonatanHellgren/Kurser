"""
A script that takes a tsv file generated by wikidata and rewrites
it in to a cypher insertion. It stores the output in a file with the
same name as the input but as a .cypher file.
"""

"""
    A function that simplyfies the wikidata label a bit, basically removes
    the url part and return the label
"""
def devide_wiki_label(label):
    return label.split("/")[-1]


"""
    Formats two ids and a key in to a node in cypher format
"""
def write_relation(id1, key, id2):
    return f"({id1})-[:{key}]->({id2}),\n"
    

"""
    Takes a line from a tsv file as input and return it in cypher 
    syntax, so that it is possible to insert it with the CREATE function.
"""
def devide_line(line, cypher_type, keys, key_types):
    line = line.strip('\n')
    split_line = line.split('\t')
    id = devide_wiki_label(split_line[0])
    cypher = f"({id}:{cypher_type}" + " {"

    """ Adds the attributes """
    for it, word in enumerate(split_line[1:]):
        word = word.replace("'", "")
        if key_types[it] == 'attribute':
            cypher += f"{keys[it]}:'{word}'"
    cypher += "}),\n"

    """ Adds the arches (relations) """
    for it, word in enumerate(split_line[1:]):
        if key_types[it] == 'relation':
           id2 = devide_wiki_label(word) 
           cypher += write_relation(id, keys[it], id2)

    return cypher


"""
    Writes the lines constucted
"""
def write_output(output_file, output):
    with open(output_file, 'w') as f:
        f.writelines("CREATE\n")
        for l in output:
            f.writelines(l)

"""
    Reads a tsv file and sends each line to be formatted by devide_line.
"""
def tsv2cypher(text_file, cypher_type, keys, key_types):
    output = []
    with open(text_file, 'r') as f:
        for line in f:
            output.append(devide_line(line, cypher_type, keys, key_types))
    output_file = f"{text_file.split('.')[0]}.cypher"
    write_output(output_file, output)


"""
    In the main function we can specify which attributes and relation 
    each node has, it is also necessary to specify the names of these.
"""
if __name__ == "__main__":
    cypher_type = 'Person'
    text_file = f'{cypher_type}.tsv'
    keys = ['personName', 'ALUMNUS_OF', 'EMPLOYEE_OF']
    key_types = ['attribute', 'relation', 'relation']
    tsv2cypher(text_file, cypher_type, keys, key_types)
